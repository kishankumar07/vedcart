<%- include('./layouts/header.ejs')%>






<section class="content-main">
  <div class="content-header">
    <div>
      <h2 class="content-title card-title">Categories</h2>
      <p>Add, edit or delete a category</p>
    </div>



    <div>
      <input
        type="text"
        placeholder="Search Categories"
        class="form-control bg-white" id="searchInput" oninput="searchCategories()"
      />
    </div>

  </div>
  <div class="card">
    <div class="card-body">
      <div class="row">
        <div class="col-md-3">
        
            <form
            action="/admin/addCategory"
            method="post"
            enctype="multipart/form-data"
            onsubmit="return validateForm('<%= JSON.stringify(category) %>')" 
            >


         
            <div class="mb-4">
              <label for="product_name" class="form-label">Name</label>
              <input
                type="text"
                name="name"
                placeholder="Type here"
                class="form-control"
                id="product_name"
              />
              <div class="error-message text-danger" id="name-error"></div>
            </div>

            <div class="mb-4">
              <label for="product_image" class="form-label">Images</label>
              <input
                type="file"
                placeholder="Image"
                class="form-control"
                id="image"
                accept="image/*"
                name="image"
              />
              <div class="error-message text-danger" id="image-error"></div>
            </div>

            <div class="mb-4">
                <label class="form-label">Description</label>
                <textarea id="description" placeholder="Type here" class="form-control" name="description"></textarea>
                
                <div class="error-message alert text-danger" id="description-error">

                  <% if(errMess) {%>
                    <%= errMess %>
                    <% } %>

                </div>
            </div>
            
            <div class="d-grid">
              <button type="submit" class="btn btn-primary" > Create category</button>
            </div>


        

          </form>
        </div>
        <div class="col-md-9">
          <div class="table-responsive">
            <table class="table table-hover">


                <thead>
                    <tr>
                      <th class="text-center">
                        <div class="form-check">
                          <input
                            class="form-check-input"
                            type="checkbox"
                            value=""
                          />
                        </div>
                      </th>
                      <th>Image</th>
                      <th>Name</th>
                      <th>Description</th>
                      <th>Category Offer</th>
                      <th>Status</th>
    
                      <th class="text-end">Action</th>
                    </tr>
                  </thead>

              <tbody>
                <% if(category.length>0) { %>
                  <% for(let i=0;i< category.length;i++) { %>


                <tr>
                  <td class="text-center">
                    <div class="form-check">
                      <input
                        class="form-check-input"
                        type="checkbox"
                        value=""
                      />
                    </div>
                  </td>
                  <div class="col-12">
                    <td>
                      <img
                        class="rounded"
                        style="width: 50px; height: 60px"
                        src="/adminAssets/imgs/category/<%= category[i].image %>"
                        alt="image"
                      />
                    </td>
                  </div>
                  <td><%= category[i].name%></td>
                  <td><%= category[i].description%></td>
                  

                  <td>
                    <% if(category[i].offer) { %>
                    <!-- Display offer name and discount if offer exists for the category -->

                    <span class="badge rounded-pill alert-success"><%= category[i].offer.name %> (<%= category[i].offer.discount %>%)</span>
<span><a href="#" style="color: red;" onclick="removeOffer('<%= category[i]._id %>')">Remove Offer</a></span> 

                
                    <% } else { %>
                    <!-- Display message if no offer exists for the category -->
                   
                    <span class="badge rounded-pill alert-warning"><a href="" data-toggle="modal" data-target="#categoryModal<%= category[i]._id %>">Apply Offer</a></span><br>
                   <span>No offer</span>

                    
                    <% } %>
                </td>


              






                  <% if (category[i].status=='active') { %>
                    <td>
                      <span class="badge rounded-pill alert-success">Active</span>
                    </td>
  
                    <%  } else { %>
                    <td>
                      <span class="badge rounded-pill alert-danger">Unlisted</span>
                    </td>
                    <% } %>


                  <td class="text-end">
                    <div class="dropdown">
                      <a
                        href="#"
                        data-bs-toggle="dropdown"
                        class="btn btn-light rounded btn-sm font-sm"
                      >
                        <i class="material-icons md-more_horiz"></i>
                      </a>
                      <div class="dropdown-menu">
                        <a class="dropdown-item" href="/admin/editCategory?id=<%= category[i]._id %>">Edit</a>


                        
                      
                        <a class="dropdown-item" href="#" onclick="confirmDelete('<%= category[i]._id %>') ">Delete</a>



                        <% if(category[i].status === 'active') {%>
                            <!-- <a class="dropdown-item text-danger" href="/admin/categoryUnlist?id=<%= category[i]._id %>">Unlist</a> -->

                            <a class="dropdown-item text-danger" href="#" onclick="confirmUnlist('<%= category[i]._id %>')">Unlist</a>

                        <% }else{ %>

                          

                            <a class="dropdown-item text-success" href="/admin/categoryList?id=<%= category[i]._id %>">list</a>
                            <% } %>

                        
                      </div>
                    </div>
                    <!-- dropdown //end -->
                  </td>
                </tr>
               






                <% } %> <% } else { %>
                  <tr>
                    <td colspan="7">Category not found</td>
                  </tr>
                  <% } %>
  


              </tbody>

              
            </table>
          </div>
        </div>
        <!-- .col// -->
      </div>
      <!-- .row // -->
    </div>
    <!-- card body .// -->
  </div>
  <!-- card .// -->
</section>



<!-- Modal for category offer that pops up when clicked on create offer -->
<% for(let i=0; i< category.length; i++) { %>
	<div class="modal fade" id="categoryModal<%= category[i]._id %>" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
	  <div class="modal-dialog">
		<div class="modal-content">
		<div class="modal-header">
		  <h5 class="modal-title">Select Offer</h5>
		  <button type="button" class="close" data-dismiss="modal" aria-label="Close">
			<span aria-hidden="true">&times;</span>
		  </button>
		</div>
    <div class="modal-body">
      <div class="">
        <div class="custom_select">
            <select class="form-select offer-select">
              <option selected>Select Offer for the categories</option>
                      <% offerData.forEach((offer) => { %>
                        <option value="<%= offer._id %>"><%= offer.name %></option>
                      <% }) %>
            </select>
        </div>
    </div>
  </div>
		<div class="modal-footer">
		  <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
		  <button type="button" class="btn btn-primary save-offer-btn">Save</button>
     
		</div>
	  </div>
	  </div>
	</div>
  <% } %>





<!-- Include SweetAlert library in your EJS template -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>


<!-- for the modal to work these are needed  start guess what , these are the basics that are needed for the modal to work-->
<!-- jQuery -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<!-- Bootstrap JS -->
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>
<!-- for the modal to work these are needed end -->



<script>
     function validateForm(category) {
        // Reset any existing error messages
        clearErrorMessages();

    // console.log('this is what received in the script of category.ejs passed as parametere ',category);

        const name = document.getElementById('product_name').value.trim().toLowerCase();


        console.log('this is the name from req.body converted to lowercase()',name);

        
        const image = document.getElementById('image').files[0];
        const description = document.getElementById('description').value;
        
        // Check if category already exists
        var categoryName = document.getElementById("product_name").value.trim();
  



      
      
        let isValid = true;

        // Check if name is empty
        if (name.trim() === '') {
            displayErrorMessage('name-error', 'Please enter a category name.');
            isValid = false;
        // } else if (!isFirstLetterCapital(name)) {
        //     displayErrorMessage('name-error', 'Category name should start with a capital letter.');
        //     isValid = false;
        }

        // Check if an image is selected and is of the correct type (jpg or png)
         if (!image) {
            displayErrorMessage('image-error', 'Please select an image.');
            isValid = false;
        } else if (!isImageTypeValid(image)) {
            displayErrorMessage('image-error', 'Please select a valid image file (jpg or png).');
            isValid = false;
        }

        // Check if description is empty
        if (description.trim() === '') {
            displayErrorMessage('description-error', 'Please enter a category description.');
            isValid = false;
        }



        console.log('reached existing category array creation');

      
        var existingCategories = JSON.parse(category).map(cat => cat.name.toLowerCase()); // Extract category names from array

        console.log('array created is ',existingCategories);



if (existingCategories.includes(categoryName)) {
  // Show SweetAlert for duplicate category
  Swal.fire({
    title: "Duplicate Category!",
    text: "This category already exists.",
    icon: "error",
    timer: 3000,
    showConfirmButton: false,
  });
  return false; // Prevent form submission
}

    

        return isValid; // Form is valid



    }

    // function isFirstLetterCapital(str) {
    //     return /^[A-Z]/.test(str);
    // }

    function isImageTypeValid(file) {
        return /\.(jpg|jpeg|png|webp)$/i.test(file.name);
    }

    function displayErrorMessage(errorId, message) {
        const errorDiv = document.getElementById(errorId);
        errorDiv.innerText = message;
    }

    function clearErrorMessages() {
        const errorMessages = document.querySelectorAll('.error-message');
        errorMessages.forEach((errorMessage) => {
            errorMessage.innerText = '';
        });
    }


    
  function confirmUnlist(categoryId) {
    Swal.fire({
      title: 'Are you sure?',
      text: 'You are about to unlist this category. ',
      icon: 'warning',
      showCancelButton: true,
      confirmButtonText: 'Yes, unlist it',
      cancelButtonText: 'Cancel'
    }).then((result) => {
      if (result.isConfirmed) {
        // If confirmed, redirect to the unlist category route with the category ID
        window.location.href = `/admin/categoryUnlist?id=${categoryId}`;
      }
    });
  }

  function confirmDelete(categoryId) {
    Swal.fire({
      title: 'Are you sure?',
      text: 'You are about to delete this category. This action cannot be undone.',
      icon: 'warning',
      showCancelButton: true,
      confirmButtonText: 'Yes, delete it',
      cancelButtonText: 'Cancel'
    }).then((result) => {
      if (result.isConfirmed) {
        // If confirmed, redirect to the unlist category route with the category ID
        window.location.href = `/admin/deleteCategory?id=${categoryId}`;
      }
    });
  }


 
  
  function searchCategories() {
    // Get the value of the search input
    const searchQuery = document.getElementById('searchInput').value.toLowerCase();

    // Get all table rows
    const rows = document.querySelectorAll('tbody tr');

    // Loop through each row and filter based on the search query
    rows.forEach(row => {
      // Extract the category name from the row 
      const categoryName = row.querySelector('td:nth-child(3)').textContent.toLowerCase();

      // Check if the category name contains the search query
      if (categoryName.includes(searchQuery)) {
        // If the category name contains the search query, display the row
        row.style.display = '';
      } else {
        // If not, hide the row
        row.style.display = 'none';
      }
    });
  }

//===================== for selecting the offer---------------------------

document.addEventListener("DOMContentLoaded", function () {
        const saveButtons = document.querySelectorAll(".save-offer-btn");

        saveButtons.forEach((button) => {
            button.addEventListener("click", async function () {
                const modal = button.closest(".modal");
                const categoryId = modal.getAttribute("id").replace("categoryModal", "");
                const offerSelect = modal.querySelector(".offer-select");
                const offerId = offerSelect.value;

                try {
                    const response = await axios.patch("/admin/applyCategoryOffer", {
                        categoryId,
                        offerId
                    });

                    if (response.data.success) {
                                        
                        window.location.reload()
                    
                    } else {
                        // Handle failure, e.g., show an error message
                        console.error("Failed to apply category offer");
                    }
                } catch (error) {
                    console.error("Error applying category offer:", error);
                }
            });
        });
    });

//===========remove category offer ============================
async function removeOffer(categoryId) {
    try {
        const isConfirmed = await Swal.fire({
            title: 'Are you sure?',
            text: 'You want to remove the offer!',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Yes, remove it!'
        });

        if (isConfirmed.isConfirmed) {
            const response = await axios.patch('/admin/removeCategoryOffer', {
                categoryId
            });

            if (response.data.success) {
                Swal.fire({
                    title: 'Offer Removed',
                    icon: 'success',
                    confirmButtonText: 'OK'
                }).then((result) => {
                    if (result.isConfirmed) {
                        // Reload the page or perform any other action
                        window.location.reload();
                    }
                });
            } else {
                console.error('Error removing offer:', response.statusText);
            }
        }
    } catch (error) {
        console.error('Error removing offer:', error);
    }
}







</script>



<%- include('./layouts/footer.ejs')%>
