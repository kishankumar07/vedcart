<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/css/bootstrap.min.css"
      integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T"
      crossorigin="anonymous"
    />

    <style>
      body {
        background-color: #ffffff;
      }

      .container {
        margin-top: 50px;
      }

      .otp-field input {
        height: 45px;
        width: 42px;
        border-radius: 6px;
        outline: none;
        font-size: 1.125rem;
        text-align: center;
        border: 1px solid #292323;
      }

      .otp-field input:focus {
        box-shadow: 0 1px 0 rgba(194, 182, 182, 0.1);
      }

      .otp-field input::-webkit-inner-spin-button,
      .otp-field input::-webkit-outer-spin-button {
        display: none;
      }

      #verifyButton {
        margin-top: 15px;
      }
    </style>
    <title>Document</title>
  </head>
  <body>
    

    <div class="container">
      <div class="row justify-content-center">
        <div class="col-12 col-md-6 col-lg-4">
          <div class="card bg-white mt-5 border-3">
            <div class="card-body p-5 text-center">
              <h4>Verify Email</h4>
              <p>Please enter the OTP sent to <%= locals.email ? locals.email : 'Email' %></p>


              <div
                class="otp-field input-container d-flex flex-row justify-content-center mt-2"
              >
                <input
                  type="text"
                  class="otp-input"
                  class="m-1 text-center form-control rounded"
                  id="num1"
                  maxlength="1"
                  oninput="focusNext(event)"
                  onkeydown="focusPrevious(event)"
                  name="first"
                />
                <input
                  type="text"
                  class="otp-input"
                  class="m-1 text-center form-control rounded"
                  id="num2"
                  maxlength="1"
                  oninput="focusNext(event)"
                  onkeydown="focusPrevious(event)"
                  name="second"
                />
                <input
                  type="text"
                  class="otp-input"
                  class="m-1 text-center form-control rounded"
                  id="num3"
                  maxlength="1"
                  oninput="focusNext(event)"
                  onkeydown="focusPrevious(event)"
                  name="third"
                />
                <input
                  type="text"
                  class="otp-input"
                  class="m-1 text-center form-control rounded"
                  id="num4"
                  maxlength="1"
                  oninput="focusNext(event)"
                  onkeydown="focusPrevious(event)"
                  name="fourth"
                />
                <input
                type="text"
                class="otp-input"
                class="m-1 text-center form-control rounded"
                id="num5"
                maxlength="1"
                oninput="focusNext(event)"
                onkeydown="focusPrevious(event)"
                name="fifth"
              /> <input
              type="text"
              class="otp-input"
              class="m-1 text-center form-control rounded"
              id="num6"
              maxlength="1"
              oninput="focusNext(event)"
              onkeydown="focusPrevious(event)"
              name="sixth"
            />
                <!-- <input
                  type="text"
                  class="m-1 text-center form-control rounded"
                  maxlength="1"
                  name="fifth"
                /> -->
              </div>

             

              <button
                id="verifyButton"
                class="btn btn-success px-4 mb-3"
                onclick=verifyOTP()
              >
                Verify
              </button>

              <button
                id="resendButton"
                class="btn btn-secondary px-4"
                onclick = 'resendOTP("<%= locals.email%>")'
                disabled
              >
                Resend
              </button>

              <div>
               <p id="otp-text"></p> 
                <span id="timer"></span>
              </div>
             
              <p id="otp-error" class="error-message" style="color: red;"></p>

            </div>
          </div>
        </div>
      </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
      function focusNext(event) {
        const currentInput = event.target;
        // console.log(`currentINput: ${currentInput}`);
        const nextInput = currentInput.nextElementSibling;
        // console.log(`next input: ${nextInput}`);

        if (currentInput.value.length === 1 && nextInput) {
          nextInput.focus();
        }
      }

      function focusPrevious(event) {
        const currentInput = event.target;
        const previousInput = currentInput.previousElementSibling;

        if (event.key === "Backspace" && !currentInput.value && previousInput) {
          previousInput.focus();
        }
      }
      // The value passed from create User and send to emailOtp.ejs is assigned to otpUserId
    //   const otpUserId = document.querySelector(".userId").value;

      //After clikcing the verify button
      function verifyOTP() {
        // e.preventDefault();
        
         
        //alerting the otp entered
        console.log("verify OTP part of emailOtp.ejs!!");
        const num1 = document.getElementById("num1").value;
        const num2 = document.getElementById("num2").value;
        const num3 = document.getElementById("num3").value;
        const num4 = document.getElementById("num4").value;
        const num5 = document.getElementById("num5").value;
        const num6 = document.getElementById("num6").value;
        console.log(`this is the otp by DOM id method --${num1+num2+num3+num4+num5+num6}`);

        let otp = "";
        document.querySelectorAll(".otp-input").forEach(function (input) {
          otp += input.value;
          console.log(`otp by forEach -->${otp}`);
        });
        // alert("Entered OTP: " + otp);
// 
        const otpErrorElement = document.getElementById("otp-error");
        
        fetch("/verifyOTP", {
          method: "POST",
          body: JSON.stringify({otp}),
                    
          headers: {
            "content-type": "application/json;charset=utf-8"
          },
          credentials: "include",
        })
          .then((response) => response.json())
          .then((data) => {
            console.log("data : ", data);
            
                
              if (data.otp == "invalidOtp") {
              otpErrorElement.textContent = data.message;
            } else if (data.otp == "noRecord") {
              otpErrorElement.textContent = data.message;
            }else if (data.otp == "inValid") {
              otpErrorElement.textContent = data.message;
            }else if (data.otp == "lessNum") {
              otpErrorElement.textContent = data.message;
            }

            else if (data.otp == true) {
        // Check if linkGoogle flag is present
        if (data.linkGoogle) {
          // Display SweetAlert asking user to link Google account
          Swal.fire({
            title: 'Link Google Account',
            text: 'Would you like to link your Google account?',
            icon: 'question',
            showCancelButton: true,
            confirmButtonText: 'Yes',
            cancelButtonText: 'No',
          }).then((result) => {
            if (result.isConfirmed) {
              // If user confirms, redirect to Google authentication page
              window.location.href = `/google`; // Change this to your actual route for Google authentication
            } else {
              // If user cancels, redirect to home page
              window.location.href = "/";
            }
          });
        } else {
          // Redirect to home page if linkGoogle flag is not present
          window.location.href = "/";
        }
      }
          })
          .catch((error) => {
            // Handle errors
            console.error("Error:", error.message);
          });
        setTimeout(() => {
          otpErrorElement.textContent = "";
        }, 6000);
      }


    //  Timer part
      let countdown = 20;

function updateTimer() {
  document.getElementById(
    "timer"
  ).innerText = `Please wait ${countdown} seconds before resending OTP.`;
  if (countdown <= 0) {
    clearInterval(interval);
    document.getElementById("resendButton").disabled = false;
    document.getElementById("timer").innerText =
      "You can now request a new OTP.";
  } else {
    countdown--;
  }
}

const interval = setInterval(updateTimer, 1000);

function resendOTP(email) {
  event.preventDefault(); // Prevent default form submission action
  // const email = document.getElementById('emailInput').value;
  // Call your backend API to resend OTP
  fetch("/resendOTP", {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
    },
     body: JSON.stringify({ email }) // The user's email should be captured and sent for resend
  })
    .then((response) => response.json())
    .then((data) => {
      if (data.success) {
        countdown = 20;
        document.getElementById("resendButton").disabled = true;

        setInterval(updateTimer, 1000);
        Swal.fire({
          title: "Resend OTP",
          text: "OTP Successfully sent to <%= locals.email%>",
          icon: "success",
          timer: 2000,
          showConfirmButton: false, // This removes the button
        });
      } else {
        alert(data.message);
      }
    });
}
     
      
    </script>
  </body>
</html>


